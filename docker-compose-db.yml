services:
  pg:
    image: postgres:latest
    container_name: pg
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${PG_DB_PASSWORD}
      - POSTGRES_USER=${PG_DB_USER}
      - POSTGRES_DB=${PG_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./init/pg:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_DB_USER} -d ${PG_DB_NAME} && PGPASSWORD=${PG_DB_PASSWORD} psql -U ${PG_DB_USER} -d ${PG_DB_NAME} -c \"SELECT 1 FROM public.health_check WHERE status = 'ready';\" | grep -q 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  fake:
    build: fake
    env_file:
      .env
    depends_on:
      pg:
        condition: service_healthy

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_USER: ${MYSQL_DB_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
    volumes:
      - ./init/mysql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
